package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

type ProgressTracker struct {
	TotalDays    int
	CurrentDay   int
	Calculator   *ProgressCalculator
	Display      *RetroDisplay
}

func main() {
	tracker := &ProgressTracker{
		TotalDays:  69,
		Calculator: NewProgressCalculator(),
		Display:    NewRetroDisplay(),
	}

	tracker.Run()
}

func (p *ProgressTracker) Run() {
	p.Display.ShowWelcome()

	for {
		day := p.getUserInput()
		if day == 0 {
			break
		}

		if day < 1 || day > p.TotalDays {
			p.Display.ShowError("–î–µ–Ω—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 69!")
			continue
		}

		p.CurrentDay = day
		progress := p.Calculator.CalculateProgress(day, p.TotalDays)
		p.Display.ShowProgress(progress, day, p.TotalDays)

		fmt.Print("\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥–æ–π –¥–µ–Ω—å? (y/n): ")
		reader := bufio.NewReader(os.Stdin)
		response, _ := reader.ReadString('\n')
		if strings.TrimSpace(strings.ToLower(response)) != "y" {
			break
		}
	}

	p.Display.ShowFarewell()
}

func (p *ProgressTracker) getUserInput() int {
	fmt.Print("\nüéØ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–Ω—è —á–µ–ª–ª–µ–Ω–¥–∂–∞ (1-69) –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞: ")

	reader := bufio.NewReader(os.Stdin)
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)

	if input == "0" {
		return 0
	}

	day, err := strconv.Atoi(input)
	if err != nil {
		p.Display.ShowError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
		return -1
	}

	return day
}
