package main

import (
	"fmt"
	"time"
	"os"
	"os/exec"
	"runtime"
	"strconv"
)

type CodeAlchemist struct {
	Name           string
	Age            int
	GamingHistory  []GameEra
	AddictionLevel int
	Transmutation  *TransmutationEngine
	Progress       *TransformationProgress
}

type GameEra struct {
	Years    string
	Games    []string
	Hours    int
	Lessons  []string
}

func main() {
	alchemist := &CodeAlchemist{
		Name:           "–ì–æ—à–∞",
		Age:            37,
		AddictionLevel: 85, // 0-100 scale
		Transmutation:  NewTransmutationEngine(),
		Progress:       NewProgressTracker(),
	}

	alchemist.InitGamingHistory()
	alchemist.RunTransmutationCeremony()
}

func (c *CodeAlchemist) InitGamingHistory() {
	c.GamingHistory = []GameEra{
		{
			Years: "2000-2005",
			Games: []string{"The Sims", "Sims 2", "Need for Speed", "Age of Empires"},
			Hours: 5000,
			Lessons: []string{
				"–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (Sims)",
				"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏ (Age of Empires)",
				"–¢–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç (Sims)",
				"–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ (—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ)",
			},
		},
		{
			Years: "2005-2010",
			Games: []string{"GTA Vice City", "GTA San Andreas", "The Sims 3", "Counter-Strike"},
			Hours: 8000,
			Lessons: []string{
				"–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ (GTA –∫–∞—Ä—Ç—ã)",
				"–ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π (Counter-Strike)",
				"–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞ (GTA —Å—é–∂–µ—Ç—ã)",
				"–ú–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å (Sims 3)",
			},
		},
		{
			Years: "2010-2020",
			Games: []string{"GTA V", "The Sims 4", "Cyberpunk 2077", "Assassin's Creed"},
			Hours: 12000,
			Lessons: []string{
				"–°–∏—Å—Ç–µ–º–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ (–æ—Ç–∫—Ä—ã—Ç—ã–µ –º–∏—Ä—ã)",
				"–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (–∏–≥—Ä–æ–≤–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞)",
				"–ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è (NPC AI)",
				"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ (–∏–≥—Ä–æ–≤—ã–µ –¥–≤–∏–∂–∫–∏)",
			},
		},
	}
}

func (c *CodeAlchemist) RunTransmutationCeremony() {
	c.ShowAlchemistIntro()
	c.AnalyzeGamingLegacy()
	c.CalculateTotalInvestment()
	c.StartTransmutationProcess()
	c.ShowTransformationResults()
	c.CreateNewIdentity()
}

func (c *CodeAlchemist) ShowAlchemistIntro() {
	clearScreen()
	fmt.Println("üß™ –ê–õ–•–ò–ú–ò–ö –ö–û–î–ê: –¢–†–ê–ù–°–ú–£–¢–ê–¶–ò–Ø –ó–ê–í–ò–°–ò–ú–û–°–¢–ò")
	fmt.Println("==========================================")
	fmt.Printf("üë®‚Äçüî¨ –ê–ª—Ö–∏–º–∏–∫: %s, %d –ª–µ—Ç\n", c.Name, c.Age)
	fmt.Println("üéØ –ú–∏—Å—Å–∏—è: –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å 25000+ —á–∞—Å–æ–≤ –∏–≥—Ä –≤ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ Go")
	fmt.Println("üî• –ù–∞—á–∏–Ω–∞–µ–º –≤–µ–ª–∏–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ...")
	pressToContinue()
}

func (c *CodeAlchemist) AnalyzeGamingLegacy() {
	clearScreen()
	fmt.Println("üìä –ê–ù–ê–õ–ò–ó –ò–ì–†–û–í–û–ì–û –ù–ê–°–õ–ï–î–ò–Ø:")
	fmt.Println("============================")

	totalHours := 0
	for i, era := range c.GamingHistory {
		fmt.Printf("\nüéÆ –≠–ø–æ—Ö–∞ %s:\n", era.Years)
		fmt.Printf("   –ò–≥—Ä—ã: %v\n", era.Games)
		fmt.Printf("   –ß–∞—Å–æ–≤: %d\n", era.Hours)
		fmt.Printf("   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:\n")
		for _, lesson := range era.Lessons {
			fmt.Printf("     üí° %s\n", lesson)
		}
		totalHours += era.Hours
		time.Sleep(2 * time.Second)
	}

	fmt.Printf("\nüìà –í–°–ï–ì–û –ò–ì–†–û–í–´–• –ß–ê–°–û–í: %d\n", totalHours)
	fmt.Printf("‚è∞ –≠—Ç–æ %.1f –ª–µ—Ç –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!\n", float64(totalHours)/24/365)

	c.Progress.SetInitialMetrics(totalHours, len(c.GamingHistory))
	pressToContinue()
}

func (c *CodeAlchemist) CalculateTotalInvestment() {
	clearScreen()
	fmt.Println("üí∞ –†–ê–°–ß–ï–¢ –ò–ù–í–ï–°–¢–ò–¶–ò–ô –í –ò–ì–†–´:")
	fmt.Println("============================")

	totalHours := c.Progress.TotalGamingHours
	hourlyRate := 500 // —Ä—É–± –≤ —á–∞—Å - –ø—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞

	potentialEarnings := totalHours * hourlyRate
	potentialSkills := totalHours / 100 // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, 100 —á–∞—Å–æ–≤ –Ω–∞ –Ω–∞–≤—ã–∫

	fmt.Printf("üéÆ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ —á–∞—Å–æ–≤ –Ω–∞ –∏–≥—Ä—ã: %d\n", totalHours)
	fmt.Printf("üíµ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: %d —Ä—É–±\n", potentialEarnings)
	fmt.Printf("üöÄ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤: %d\n", potentialSkills)
	fmt.Printf("üìö –ö–Ω–∏–≥ –º–æ–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å: %d\n", totalHours/50)
	fmt.Printf("üèÜ –ü—Ä–æ–µ–∫—Ç–æ–≤ –º–æ–∂–Ω–æ –±—ã–ª–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å: %d\n", totalHours/200)

	fmt.Println("\nüí° –ù–æ —ç—Ç–æ –ù–ï –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–µ –≤—Ä–µ–º—è!")
	fmt.Println("   –≠—Ç–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ —Ç–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç!")
	pressToContinue()
}

func (c *CodeAlchemist) StartTransmutationProcess() {
	clearScreen()
	fmt.Println("üî• –ó–ê–ü–£–°–ö –ü–†–û–¶–ï–°–°–ê –¢–†–ê–ù–°–ú–£–¢–ê–¶–ò–ò:")
	fmt.Println("================================")

	// –ü—Ä–æ—Ü–µ—Å—Å —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏ –Ω–∞–≤—ã–∫–æ–≤
	skillsMap := map[string]string{
		"–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (Sims)": "‚Üí –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ü–û",
		"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏ (RTS)": "‚Üí Memory Management –≤ Go",
		"–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ (GTA)": "‚Üí Data Structures",
		"–ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π (FPS)": "‚Üí Algorithm Optimization",
		"–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞ (RPG)": "‚Üí API Design",
		"–°–∏—Å—Ç–µ–º–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ (–æ—Ç–∫—Ä—ã—Ç—ã–µ –º–∏—Ä—ã)": "‚Üí System Architecture",
		"–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º": "‚Üí Debugging Complex Systems",
		"–ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è (NPC)": "‚Üí Design Patterns",
		"–ú–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å (Sims)": "‚Üí Concurrent Programming",
		"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤": "‚Üí Microservices Design",
	}

	fmt.Println("üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –≤ IT-–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏:")
	for gamingSkill, itSkill := range skillsMap {
		fmt.Printf("   %-45s %s\n", gamingSkill, itSkill)
		time.Sleep(500 * time.Millisecond)
	}

	// –ó–∞–ø—É—Å–∫ –∞–ª—Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è
	c.Transmutation.StartTransmutation(c.Progress.TotalGamingHours)
	pressToContinue()
}

func (c *CodeAlchemist) ShowTransformationResults() {
	clearScreen()
	fmt.Println("üéâ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–†–ê–ù–°–ú–£–¢–ê–¶–ò–ò:")
	fmt.Println("===========================")

	results := c.Transmutation.GetResults()

	fmt.Printf("üß™ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏: %d%%\n", results.Efficiency)
	fmt.Printf("üöÄ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ —á–∞—Å–æ–≤: %d\n", results.TransmutedHours)
	fmt.Printf("üí° –ü–æ–ª—É—á–µ–Ω–æ IT-–Ω–∞–≤—ã–∫–æ–≤: %d\n", results.AcquiredSkills)
	fmt.Printf("üéØ –£—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ Go: %d%%\n", results.GoMasteryLevel)

	fmt.Println("\nüìà –ü–†–û–ì–†–ï–°–° –ß–ï–õ–õ–ï–ù–î–ñ–ê:")
	c.Progress.DisplayProgress(4, 69) // Day 4 of 69

	pressToContinue()
}

func (c *CodeAlchemist) CreateNewIdentity() {
	clearScreen()
	fmt.Println("üé≠ –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ô –ò–î–ï–ù–¢–ò–ß–ù–û–°–¢–ò:")
	fmt.Println("===============================")

	fmt.Println(`
	üßô‚Äç‚ôÇÔ∏è‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
	üßô‚Äç‚ôÇÔ∏è‚îÇ        –ö–û–î-–ê–õ–•–ò–ú–ò–ö              ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ                                 ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ  –ò–≥—Ä–æ–≤–∞—è –∑–∞–≤–∏—Å–∏–∂–Ω–æ—Å—Ç—å   ‚Üí       ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ       85%               ‚Üí   15%  ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ                                 ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ  –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ Go         ‚Üí       ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ       15%               ‚Üí   85%  ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ                                 ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îÇ  –¢—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!        ‚îÇ
	üßô‚Äç‚ôÇÔ∏è‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
	`)

	fmt.Println("üéØ –ù–æ–≤–∞—è –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å: –ö–û–î-–ê–õ–•–ò–ú–ò–ö")
	fmt.Println("üí™ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:")
	fmt.Println("   ‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –æ–ø—ã—Ç")
	fmt.Println("   ‚Ä¢ –ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º")
	fmt.Println("   ‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ")
	fmt.Println("   ‚Ä¢ –£–ø–æ—Ä—Å—Ç–≤–æ (25 –ª–µ—Ç –∏–≥—Ä!)")

	fmt.Println("\nüöÄ –ü–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è:")
	fmt.Println("   –î–µ–Ω—å 5-30: –û—Å–≤–æ–µ–Ω–∏–µ –±–∞–∑ Go + —Ä–µ—Ç—Ä–æ-–ø—Ä–æ–µ–∫—Ç—ã")
	fmt.Println("   –î–µ–Ω—å 31-50: Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ + —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏")
	fmt.Println("   –î–µ–Ω—å 51-69: –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç + –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ")

	c.AddictionLevel = 15 // –†–µ–∑–∫–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	fmt.Printf("\n‚úÖ –£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–≤–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: %d%%\n", c.AddictionLevel)
	fmt.Printf("üéÆ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ –∫–æ–¥: %d —á–∞—Å–æ–≤\n", c.Progress.TransformedHours)
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
func clearScreen() {
	switch runtime.GOOS {
	case "linux", "darwin":
		cmd := exec.Command("clear")
		cmd.Stdout = os.Stdout
		cmd.Run()
	case "windows":
		cmd := exec.Command("cmd", "/c", "cls")
		cmd.Stdout = os.Stdout
		cmd.Run()
	}
}

func pressToContinue() {
	fmt.Println("\n‚Üµ –ù–∞–∂–º–∏ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
	fmt.Scanln()
}

