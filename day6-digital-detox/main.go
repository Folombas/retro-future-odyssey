package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

func main() {
	fmt.Println("üîÑ DIGITAL DETOX MANAGER v1.0")
	fmt.Println("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
	fmt.Println()
	fmt.Println("üí° –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ì–æ—à–∞!")
	fmt.Println("üéØ –¢–≤–æ—è –º–∏—Å—Å–∏—è: –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å 25 –ª–µ—Ç –∏–≥—Ä–æ–≤–æ–≥–æ –æ–ø—ã—Ç–∞")
	fmt.Println("   –≤ 25 –ª–µ—Ç —É—Å–ø–µ—à–Ω–æ–π –∫–∞—Ä—å–µ—Ä—ã Go-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞!")
	fmt.Println()

	detoxManager := NewDetoxManager()
	progressTracker := NewProgressTracker()
	scanner := bufio.NewScanner(os.Stdin)

	for {
		fmt.Println("\n" + strings.Repeat("‚ïê", 50))
		fmt.Println("üè† –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ:")
		fmt.Println("   1 - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–¥–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏")
		fmt.Println("   2 - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏")
		fmt.Println("   3 - –ü—Ä–µ–æ–¥–æ–ª–µ—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å")
		fmt.Println("   4 - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –ø—Ä–∏–≤—ã—á–∫—É")
		fmt.Println("   5 - –ó–∞–ø–∏—Å–∞—Ç—å –≤—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏—è Go")
		fmt.Println("   6 - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç")
		fmt.Println("   7 - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
		fmt.Println("   8 - –ü–æ–ª—É—á–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é")
		fmt.Println("   9 - –í—ã—Ö–æ–¥")
		fmt.Print("üéØ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

		if !scanner.Scan() {
			break
		}

		choice := strings.TrimSpace(scanner.Text())

		switch choice {
		case "1":
			detoxManager.ShowBadHabits()
		case "2":
			detoxManager.ShowGoodHabits()
		case "3":
			fmt.Print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–∏–≤—ã—á–∫–∏ –¥–ª—è –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è: ")
			scanner.Scan()
			if index, err := strconv.Atoi(scanner.Text()); err == nil {
				detoxManager.OvercomeAddiction(index - 1)
			}
		case "4":
			fmt.Print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –ø–æ–ª–µ–∑–Ω—É—é –ø—Ä–∏–≤—ã—á–∫—É: ")
			scanner.Scan()
			detoxManager.AddGoodHabit(scanner.Text())
		case "5":
			fmt.Print("–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –∏–∑—É—á–∞–ª Go? ")
			scanner.Scan()
			if hours, err := strconv.Atoi(scanner.Text()); err == nil {
				progressTracker.AddStudyTime(hours)
			}
		case "6":
			progressTracker.AddProject()
		case "7":
			progressTracker.ShowProgress()
			progressTracker.CalculateFuture()
		case "8":
			fmt.Printf("\nüí´ –ú–û–¢–ò–í–ê–¶–ò–Ø: %s\n", progressTracker.GetRandomMotivation())
		case "9":
			fmt.Println("\nüëã –î–æ –≤—Å—Ç—Ä–µ—á–∏, –ì–æ—à–∞!")
			fmt.Println("üí™ –ü–æ–º–Ω–∏: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±–µ–∑ –∏–≥—Ä - —ç—Ç–æ –¥–µ–Ω—å –∫ —É—Å–ø–µ—à–Ω–æ–π –∫–∞—Ä—å–µ—Ä–µ!")
			return
		default:
			fmt.Println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–µ—Ç–æ–∫—Å–∞
		progress := detoxManager.GetProgress()
		fmt.Printf("\nüìà –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–µ—Ç–æ–∫—Å–∞: %.1f%%\n", progress)

		if progress > 50 {
			fmt.Println("üéâ –û—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã! –¢—ã –Ω–∞ –ø–æ–ª–ø—É—Ç–∏ –∫ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏!")
		}
	}
}
